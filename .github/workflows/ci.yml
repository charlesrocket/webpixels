name: CI
on: [push, pull_request]

permissions:
  contents: read
  pages: write
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  cargo:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup update stable && rustup default stable
      - name: Build
        run: cargo build --verbose
      - name: Test
        run: cargo test --verbose

  clippy:
    name: Lint
    runs-on: ubuntu-latest
    if: "!startsWith(github.ref, 'refs/tags/')"
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add clippy
      - run: cargo clippy --all-features -- -D clippy::all -D warnings

  publish:
    needs: cargo
    name: Publish crate
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo publish -p webpixels --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}

  deploy:
    name: Deploy
    needs: cargo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Rust Setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: swatinem/rust-cache@v1
      - name: Install dependencies
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-make
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: make
          args: build --manifest-path www/Cargo.toml
      - name: Setup Pages
        uses: actions/configure-pages@v1
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './www'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main
